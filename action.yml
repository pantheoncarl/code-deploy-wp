name: 'Deploy WordPress to Pantheon'
description: 'Deploy WordPress codebase to a Pantheon appserver'
inputs:
  PANTHON_PRIVATE_KEY:
    description: "The private RSA key you will save in the Github Secrets"
    required: true
  PHP_LINT:
    description: "optional php syntax check"
    required: false
    default: false
  FLAGS:
    description: "Optional flags for the deployment"
    required: false
    default: '-azvr --inplace --exclude=".*"'
  CACHE_CLEAR:
    description: "Optional WPE Clear cache"
    required: false
    default: true
  SRC_PATH:
    description: "An optional source directory to deploy other than the root directory that is being versioned."
    default: "."
    required: false
  REMOTE_PATH:
    description: "An optional destination directory to deploy to other than the WordPress root."
    default: ""
    required: false
  WPE_ENV:
    description: "Destination to deploy to WPE"
    required: false
  PRD_ENV:
    description: "Destination to deploy to WPE Prod"
    required: false
  STG_ENV:
    description: "Destination to deploy to WPE Stage"
    required: false
  DEV_ENV:
    description: "Destination to deploy to WPE Dev"
    required: false
  SCRIPT:
    description: "File containing custom scripts run after the rsync"
    required: false
author: 'carl-alberto'
branding:
  icon: 'upload-cloud'
  color: 'yellow'
jobs:
  my-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Pull Docker Image
        run: docker pull quay.io/pantheon-public/build-tools-ci:8.x-php7.4

  deploy_to_pantheon:
    container:
      image: quay.io/pantheon-public/build-tools-ci:6.x
      options: --user root
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache bash_env.txt
        uses: actions/cache@v2
        env:
          cache-name: cache-bash-env
        with:
          path: bash_env.txt
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache composer cache
        uses: actions/cache@v2
        env:
          cache-name: cache-composer-cache
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache vendor folder
        uses: actions/cache@v2
        env:
          cache-name: cache-vendor
        with:
          path: ./vendor
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.run_number }}-${{ hashFiles('**/composer.lock') }}

      - name: Cache web folder
        uses: actions/cache@v2
        env:
          cache-name: cache-web
        with:
          path: ./web
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.run_number }}

      - name: Cache drush folder
        uses: actions/cache@v2
        env:
          cache-name: cache-drush
        with:
          path: ./drush
          key: ${{ runner.os }}-build-${{ env.cache-name }}

      # Set TERMINUS_ENV and related environment variables.
      # https://github.com/pantheon-systems/docker-build-tools-ci/blob/6.x/scripts/set-environment
      - name: setup-environment-vars
        run: /build-tools-ci/scripts/set-environment

      # Deploy to Pantheon
      - name: deploy to Pantheon
        run: |
          #echo "$SSH_PRIVATE_KEY" > ../private.key
          #chmod 600 ../private.key
          #eval `ssh-agent -s`
          #ssh-add ../private.key
          #source $BASH_ENV
          #./.ci/deploy/pantheon/dev-multidev
          ls
          terminus self:info
          ls /build-tools-ci/scripts
          cd /
          ls 
